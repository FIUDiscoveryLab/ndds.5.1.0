/* (c) Copyright, Real-Time Innovations, Inc. 2003-2009. All rights reserved. */
/*
 * @(#)reda_hashedSkiplist_impl.h    generated by: makeheader    Sat Nov 23 02:38:01 2013
 *
 *		built from:	hashedSkiplist_impl.ifc
 */

#ifndef reda_hashedSkiplist_impl_h
#define reda_hashedSkiplist_impl_h


#ifdef __cplusplus
    extern "C" {
#endif

 
struct REDAHashedSkiplist {
    /* the underlying skiplists */
    struct REDASkiplist **_bucket;
    /*i The hash used */
    struct REDAHashDefinition _hashDefinition;
    /*i Total number of nodes */
    int _nodeCount;
};



  #define REDAHashedSkiplist_gotoTopNodeMacro(self, node) \
	REDASkiplist_gotoTopNodeMacro((self)->_bucket[0], node)

  /* a private method that can be called from a macro; so we need
     to declare it here */
    REDADllExport RTIBool
    REDAHashedSkiplist_gotoFirstNodeInNextBucketInternal(
	struct REDAHashedSkiplist *self,
	const struct REDASkiplistNode **node);

  /* the following is done in such a way that the common
     case (going to the following node in the same bucket) is
     very fast; in case we need to skip buckets, we call a
     function as that is less common */
  #define REDAHashedSkiplist_gotoNextNodeMacro(self, node) \
    ( (*(node))->forward ? \
      ( (*(node) = (*(node))->forward), RTI_TRUE ) : \
      REDAHashedSkiplist_gotoFirstNodeInNextBucketInternal(self, node) )

  #define REDAHashedSkiplist_getNodeCountMacro(self) ((self)->_nodeCount)

  #define REDAHashedSkiplist_computeBucketIndexMacro(self, key) \
    REDAHash_computeHash(&((self)->_hashDefinition), key)

  #define REDAHashedSkiplist_findNodeMacro(self, answer, preciseMatch, \
                                           searchKey) \
    REDASkiplist_findNodeFastMacro( \
	(self)->_bucket[REDAHashedSkiplist_computeBucketIndexMacro(self, \
                                                                   searchKey)], \
        answer, preciseMatch, searchKey)

  #ifndef RTI_PRECONDITION_TEST

    #define REDAHashedSkiplist_gotoTopNode   REDAHashedSkiplist_gotoTopNodeMacro
    #define REDAHashedSkiplist_gotoNextNode  REDAHashedSkiplist_gotoNextNodeMacro
    #define REDAHashedSkiplist_getNodeCount  REDAHashedSkiplist_getNodeCountMacro
    #define REDAHashedSkiplist_findNode      REDAHashedSkiplist_findNodeMacro

  #endif /* !RTI_PRECONDITION_TEST */



#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* reda_hashedSkiplist_impl_h */
